{"version":3,"sources":["components/Button.jsx","components/Form.jsx","components/List.jsx","utils/AppDispatcher.js","utils/ActionTypes.js","TodoActionCreators.js","TodoWebApiUtils.js","TodoStore.js","App.js","index.js"],"names":["Button","this","props","className","text","onClick","Component","Form","handleChange","event","item","state","todoText","target","value","setState","createNewTodoItem","todoId","nanoid","todoStatus","handleClick","handelSubmit","initialState","bind","type","placeholder","onChange","onKeyPress","key","Lists","list","deleteTodoItem","filter","filteredList","el","buttonText","List","map","Item","AppDispatcher","Dispatcher","ActionTypes","GET_TODO_LIST","TODO_LIST_SUCCESS","TODO_LIST_FAIURE","CREATE_TODO_ITEM","CREATE_TODO_ITEM_SUCCESS","CREATE_TODO_ITEM_FAILURE","UPDATE_TODO_ITEM","UPDATE_TODO_ITEM_FAILURE","UPDATE_TODO_ITEM_SUCCESS","DELETE_TODO_ITEM","DELETE_TODO_ITEM_FAILURE","DELETE_TODO_ITEM_SUCCESS","dispatch","data","error","TODO_LIST_FAILURE","baseUrl","todoList","TodoStore","assign","EventEmitter","prototype","emitChange","emit","addChangeListener","callback","on","removeChangeListener","removeListener","getTodoList","dispatchToken","register","action","console","log","url","axios","get","then","response","TodoActionCreators","listItems","catch","getList","post","JSON","stringify","addItem","push","patch","patchItem","index","findIndex","splice","delete","deleteItem","getStateFromStore","Todo","toggleTodoStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eaac13a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Button extends Component {\n\trender() {\n\t\tconst { className, text, onClick } = this.props\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={className}\n\t\t\t\tonClick={onClick}\n\t\t\t>\n\t\t\t\t{text}\n\t\t\t</button>\n\t\t)\n\t}\n\n\n}","import React, { Component } from 'react'\nimport Button from './Button'\nimport nanoid from 'nanoid'\n\nexport default class Form extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.initialState = {\n\t\t\titem: this.createNewTodoItem()\n\t\t}\n\t\tthis.state = this.initialState\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.createNewTodoItem = this.createNewTodoItem.bind(this)\n\t}\n\n\thandleChange = (event) => {\n\t\tvar item = { ...this.state.item }\n\t\titem.todoText = event.target.value\n\t\tthis.setState({ item })\n\t}\n\n\tcreateNewTodoItem = () => {\n\t\tlet newItem = {\n\t\t\ttodoId:  nanoid(),\n\t\t\ttodoText: '',\n\t\t\ttodoStatus: 'unchecked',\n\t\t}\n\t\treturn newItem\n\t}\n\n\thandleClick = () => {\n\t\tif (this.state.item) {\n\t\t\t// TODO: add if (response == 201)\n\t\t\tthis.props.handelSubmit(this.state.item)\n\t\t\tthis.setState({\n\t\t\t\titem: this.createNewTodoItem()\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { item } = this.state\n\t\treturn (\n\t\t\t<div className=\"ui left aligned container\">\n\t\t\t\t<div className=\"ui labeled input\">\n\t\t\t\t\t<div className=\"ui label label\"> Add Item </div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ui focus input\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder='Add todo Item'\n\t\t\t\t\t\tvalue={item.todoText}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonKeyPress={event => {\n\t\t\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\t\t\tthis.handleClick()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t</div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"ui blue basic button\"\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\ttext=\"Add\"\n\t\t\t\t>\n\t\t\t\t</Button>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\n// import Button from './Button'\nimport { List, Button } from 'semantic-ui-react'\n\nexport default class Lists extends Component {\n\trender() {\n\t\tconst { onClick, list, deleteTodoItem, filter } = this.props\n\n\t\tif (list) {\n\t\t\tlet filteredList = list.filter((el) => el.todoStatus === filter)\n\t\t\tlet buttonText = filter==='checked'?'Move to Todo':'Done'\n\t\t\treturn (\n\t\t\t\t<div >\n\t\t\t\t\t<List >{filteredList.map((item) =>\n\t\t\t\t\t\t<List.Item key={item.todoId}>\n\t\t\t\t\t\t\t<div className=\"ui right labeled button\">\n\t\t\t\t\t\t\t\t<h3 className =\"ui basic label\">{item.todoText}</h3>\n\t\t\t\t\t\t\t\t<Button onClick = {()=>onClick(item)} className=\"ui green basic button\" >{buttonText}</Button>\n\t\t\t\t\t\t\t\t<Button onClick = {()=>deleteTodoItem(item)} className=\"ui red basic button\" >Remove</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t\t</List>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn\n\t\t}\n\t}\n}\n","import { Dispatcher } from 'flux'\n\nconst AppDispatcher = new Dispatcher()\n\nexport default AppDispatcher\n","const ActionTypes = {\n\tGET_TODO_LIST: 'GET_TODO_LIST',\n\tTODO_LIST_SUCCESS: 'TODO_LIST_SUCCESS',\n\tTODO_LIST_FAIURE: 'TODO_LIST_FAIURE',\n\tCREATE_TODO_ITEM: 'CREATE_TODO_ITEM',\n\tCREATE_TODO_ITEM_SUCCESS: 'CREATE_TODO_ITEM_SUCCESS',\n\tCREATE_TODO_ITEM_FAILURE: 'CREATE_TODO_ITEM_FAILURE',\n\tUPDATE_TODO_ITEM: 'UPDATE_TODO_ITEM',\n\tUPDATE_TODO_ITEM_FAILURE: 'UPDATE_TODO_ITEM_FAILURE',\n\tUPDATE_TODO_ITEM_SUCCESS: 'UPDATE_TODO_ITEM_SUCCESS',\n\tDELETE_TODO_ITEM: 'DELETE_TODO_ITEM',\n\tDELETE_TODO_ITEM_FAILURE: 'DELETE_TODO_ITEM_FAILURE',\n\tDELETE_TODO_ITEM_SUCCESS: 'DELETE_TODO_ITEM_SUCCESS',\n\t\n}\n\nexport default ActionTypes","import AppDispatcher from './utils/AppDispatcher'\nimport ActionTypes from './utils/ActionTypes'\n\nexport default {\n\tgetTodoList() {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.GET_TODO_LIST,\n\t\t})\n\t},\n\n\tsuccessTodoList(data) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.TODO_LIST_SUCCESS,\n\t\t\tdata, // SUCCESS\n\t\t})\n\t},\n\n\tfailureTodoList(error) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.TODO_LIST_FAILURE,\n\t\t\terror, // FAILURE\n\t\t})\n\t},\n\n\tcreateTodoItem(data) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.CREATE_TODO_ITEM,\n\t\t\tdata\n\t\t})\n\t},\n\tsuccessCreateTodoItem(data) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.CREATE_TODO_ITEM_SUCCESS,\n\t\t\tdata, // SUCCESS\n\t\t})\n\t},\n\n\tfailureCreateTodoItem(error) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.CREATE_TODO_ITEM_FAILURE,\n\t\t\terror, // FAILURE\n\t\t})\n\t},\n\tupdateTodoItem(data) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.UPDATE_TODO_ITEM,\n\t\t\tdata\n\t\t})\n\t},\n\tsuccessUpdateTodoItem(data) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.UPDATE_TODO_ITEM_SUCCESS,\n\t\t\tdata, // SUCCESS\n\t\t})\n\t},\n\n\tfailureUpdateTodoItem(error) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.UPDATE_TODO_ITEM_FAILURE,\n\t\t\terror, // FAILURE\n\t\t})\n\t},\n\tdeleteTodoItem(data) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.DELETE_TODO_ITEM,\n\t\t\tdata\n\t\t})\n\t},\n\tsuccessDeleteTodoItem(data) {\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.DELETE_TODO_ITEM_SUCCESS,\n\t\t\tdata, // SUCCESS\n\t\t})\n\t},\n\n\tfailureDeleteTodoItem(error){\n\t\tAppDispatcher.dispatch({\n\t\t\ttype: ActionTypes.DELETE_TODO_ITEM_FAILURE,\n\t\t\terror, // FAILURE\n\t\t})\n\t}\n}\n","/* eslint-disable quotes */\nimport axios from 'axios'\nimport TodoActionCreators from './TodoActionCreators'\n\nconst baseUrl = 'https://d0y3f0lucc.execute-api.us-east-2.amazonaws.com/prod'\n\nexport function getList() {\n\tconsole.log('-------WebApi GETLIST--------')\n\tconst url=`${baseUrl}/todo`\n\n\taxios.get(url)\n\t\t.then(response => {\n\t\t\tTodoActionCreators.successTodoList(response.data.listItems)\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error)\n\t\t\tTodoActionCreators.failureTodoList(error)\n\t\t})\n}\n\nexport function addItem(item) {\n\tconsole.log('-------WebApi ADD--------')\n\tconst url=`${baseUrl}/todo`\n\t\n\taxios.post(url, JSON.stringify(item))\n\t\t.then(response => {\n\t\t\tTodoActionCreators.successCreateTodoItem(item)\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error)\n\t\t\tTodoActionCreators.failureCreateTodoItem(error)\n\t\t})\n}\n\nexport function patchItem (item) {\n\tconsole.log('-------WebApi PATCH --------')\n\tconst url=`${baseUrl}/todo/${item.todoId}`\n\n\taxios.patch(url, JSON.stringify(item))\n\t\t.then(response => {\n\t\t\tTodoActionCreators.successUpdateTodoItem(item)\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error)\n\t\t\tTodoActionCreators.failureUpdateTodoItem(error)\n\t\t})\n}\n\nexport function deleteItem (item) {\n\tconsole.log('-------WebApi DELETE--------')\n\tconst url=`${baseUrl}/todo/${item.todoId}`\n\n\taxios.delete(url)\n\t\t.then(response => {\n\t\t\tTodoActionCreators.successDeleteTodoItem(item)\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error)\n\t\t\tTodoActionCreators.failureDeleteTodoItem(error)\n\t\t})\n}\n","\nimport { EventEmitter } from 'events'\nimport assign from 'object-assign'\n\nimport { getList, addItem, patchItem, deleteItem } from './TodoWebApiUtils'\nimport AppDispatcher from './utils/AppDispatcher'\nimport ActionTypes from './utils/ActionTypes'\n\nconst CHANGE_EVENT = 'change'\n\n// Store instances/variables\nlet todoList = []\n\nconst TodoStore = assign({}, EventEmitter.prototype, {\n\t// Public functions the views can see\n\n\temitChange() {\n\t\tthis.emit(CHANGE_EVENT)\n\t},\n\n\t// View can subscribe to store events\n\taddChangeListener(callback) {\n\t\tthis.on(CHANGE_EVENT, callback)\n\t},\n\n\t// View can un-subscribe to store events\n\tremoveChangeListener(callback) {\n\t\tthis.removeListener(CHANGE_EVENT, callback)\n\t},\n\n\t// View can retrieve specific values that store manages\n\tgetTodoList() {\n\t\treturn todoList\n\t},\n\n})\n\nTodoStore.dispatchToken = AppDispatcher.register((action) => {\n\tswitch (action.type) {\n\tcase ActionTypes.GET_TODO_LIST:\n\t\tgetList() // make api call to retrieve todo list\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.TODO_LIST_SUCCESS:\n\t\ttodoList = action.data // update store instance\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.TODO_LIST_FAILURE:\n\t\t// TODO: handle failure\n\t\ttodoList = action.error // update store instance\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.CREATE_TODO_ITEM:\n\t\taddItem(action.data) // make api call to retrieve todo list\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.CREATE_TODO_ITEM_SUCCESS:\n\t\ttodoList.push(action.data)  // update store instance\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.CREATE_TODO_ITEM_FAILURE:\n\t\t// TODO: handle failure\n\t\ttodoList = action.error // update store instance\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.UPDATE_TODO_ITEM:\n\t\tpatchItem(action.data) // make api call to update item to todo list\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.UPDATE_TODO_ITEM_SUCCESS:\n\t\t// find the index of the original item\n\t\tvar index = todoList.findIndex(el => el.todoId === action.data.todoId)\n\t\t// Replace the original item with the new item\n\t\ttodoList.splice(index, 1, action.data)\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.UPDATE_TODO_ITEM_FAILURE:\n\t\t// TODO: handle failure\n\t\ttodoList = action.error // update store instance\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.DELETE_TODO_ITEM:\n\t\tdeleteItem(action.data) // make api call to update item to todo list\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.DELETE_TODO_ITEM_SUCCESS:\n\t\t// find the index of the original item\n\t\tindex = todoList.findIndex(el => el.todoId === action.data.todoId)\n\t\t// Replace the original item with the new item\n\t\ttodoList.splice(index, 1)\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tcase ActionTypes.DELETE_TODO_ITEM_FAILURE:\n\t\t// TODO: handle failure\n\t\ttodoList = action.error // update store instance\n\t\tTodoStore.emitChange()\n\t\tbreak\n\tdefault:\n    // do nothing\n\t}\n})\n\nexport default TodoStore\n","import React, { Component } from 'react'\nimport Form from './components/Form'\nimport Lists from './components/List'\nimport TodoStore from './TodoStore'\nimport TodoActionCreators from './TodoActionCreators'\n\n// Private function that gets values from store\nfunction getStateFromStore() {\n\treturn {\n\t\ttodoList: TodoStore.getTodoList()\n\t}\n}\n\nexport default class Todo extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = getStateFromStore()\n\n\t\tthis.onChange = this.onChange.bind(this)\n\t\tthis.handelSubmit = this.handelSubmit.bind(this)\n\t\tthis.toggleTodoStatus = this.toggleTodoStatus.bind(this)\n\t\tthis.deleteTodoItem = this.deleteTodoItem.bind(this)\n\t}\n\n\t// Store uses this as callback fn when store is updated\n\tonChange() {\n\t\tthis.setState(getStateFromStore())\n\t}\n\n\t// Subscribe to store events on mount\n\tcomponentDidMount() {\n\t\tTodoStore.addChangeListener(this.onChange)\n\t\tTodoActionCreators.getTodoList()\n\t}\n\n\t// Un-Subscribe to store events on un-mount\n\tcomponentWillUnmount() {\n\t\tTodoStore.removeChangeListener(this.onChange)\n\t}\n\n\thandelSubmit = (item) => {\n\t\tTodoActionCreators.createTodoItem(item)\n\t}\n\n\ttoggleTodoStatus = (item) => {\n\t\titem.todoStatus = (item.todoStatus === 'checked') ? 'unchecked' : 'checked'\n\t\tTodoActionCreators.updateTodoItem(item)\n\t}\n\n\tdeleteTodoItem = (item) => {\n\t\tTodoActionCreators.deleteTodoItem(item)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=' ui container'>\n\t\t\t\t<div className=' ui segment'>\n\t\t\t\t\t<h1 className='ui center aligned header'>Todo List App</h1>\n\t\t\t\t\t<div className=\"ui divider\"></div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Form handelSubmit={this.handelSubmit} ></Form>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"ui horizontal divider\"><h4 className=\"ui header\">Todo Items</h4></div>\n\t\t\t\t\t\t<Lists\n\t\t\t\t\t\t\tdeleteTodoItem = {this.deleteTodoItem}\n\t\t\t\t\t\t\tonClick={this.toggleTodoStatus}\n\t\t\t\t\t\t\tlist={this.state.todoList}\n\t\t\t\t\t\t\tfilter = \"unchecked\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</Lists>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"ui horizontal divider\"><h4 className=\"ui header\">Completed Items</h4></div>\n\t\t\t\t\t\t<Lists\n\t\t\t\t\t\t\tdeleteTodoItem = {this.deleteTodoItem}\n\t\t\t\t\t\t\tonClick={this.toggleTodoStatus}\n\t\t\t\t\t\t\tlist={this.state.todoList}\n\t\t\t\t\t\t\tfilter=\"checked\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</Lists>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}